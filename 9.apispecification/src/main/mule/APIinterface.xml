<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <http:listener-config name="spotify-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="spotify-config" api="spotify.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="spotify-main">
        <http:listener config-ref="spotify-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <logger level="INFO" doc:name="Logger" doc:id="d6f123b7-c939-4da4-9aa4-5e81aff98b36" message='#["************************ Log Router ***************"]'/>
		<apikit:router config-ref="spotify-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="spotify-console">
        <http:listener config-ref="spotify-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <logger level="INFO" doc:name="Logger" doc:id="64c4764d-25a2-4124-accd-15b9c44e09fa" message='#["************************ Log Console ***************"]'/>
		<apikit:console config-ref="spotify-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="put:\artists\(ID):spotify-config">
		<set-variable value="#[attributes.uriParams.'ID']" doc:name="store ArtistID" doc:id="185fbe8a-bc8c-4bc3-94b4-30416e6bd54a" variableName="artistID"/>
		<set-variable value="#[payload]" doc:name="store artist info" doc:id="cbc74a13-58f1-46c1-9c5b-5461d768df3c" variableName="artistInfo"/>
		<vm:publish-consume doc:name="sync update artist info" doc:id="507b1492-14c1-4229-8d88-a34d54101b3f" config-ref="VM_Config" queueName="artistInfo.toPut">
			<vm:content ><![CDATA[#[%dw 2.0

output application/json
---

{
	'artistID': vars.artistID,
	'artistInfo': vars.artistInfo
}]]]></vm:content>
		</vm:publish-consume>
		<set-payload value="#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;&#10;payload]" doc:name="send out response" doc:id="1b22d4bb-6dba-491c-9c3a-3e3fb022baf0" />
    </flow>
    <flow name="updateArtistInfo" doc:id="81c4370e-4fe1-4a14-a728-5edade1635d1" >
		<vm:listener doc:name="Queue Listener" doc:id="487d44b6-00b4-49ce-bbb9-cff69c761cac" config-ref="VM_Config" queueName="artistInfo.toPut"/>
		<db:update doc:name="Update" doc:id="c84185b7-2f80-4fef-9850-8bf370f0fc55" config-ref="Database_Config">
			<db:sql ><![CDATA[UPDATE artists SET genre = :artistGenre WHERE id = :artistID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	'artistGenre': payload.artistinfo.Genre,
	'artistID': payload.artistID
}]]]></db:input-parameters>
		</db:update>
	</flow>
	<flow name="delete:\artists\(ID):spotify-config">
		<set-variable value="#[attributes.uriParams.'ID']" doc:name="store ArtistID" doc:id="9e119f1b-6b88-4b55-84b3-a3d4d288322d" variableName="artistID" />
		<vm:publish-consume doc:name="Publish consume" doc:id="7d6036ba-da81-4d8d-8ef7-8a42cdcafeca" config-ref="VM_Config" queueName="artistID.toDelete">
			<vm:content ><![CDATA[#[vars.artistID]]]></vm:content>
		</vm:publish-consume>
		<set-payload value="#[%dw 2.0&#10;&#10;output application/json&#10;---&#10;&#10;payload]" doc:name="Set Payload from Java to JSON" doc:id="2b851076-0989-4c47-9983-998466bd4066" />
    </flow>
    <flow name="deleteArtists" doc:id="0880d670-5252-4f59-9757-25c211bfd2e3" >
		<vm:listener doc:name="Listener" doc:id="692ae68a-9a0d-4bd4-a110-c47e9fd8acb1" config-ref="VM_Config" queueName="artistID.toDelete"/>
		<db:delete doc:name="Delete artist" doc:id="cc30dcad-38db-4b5a-923e-bed0e7d50bff" config-ref="Database_Config">
			<db:sql ><![CDATA[DELETE FROM artists WHERE id = :artistID]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	'artistID': payload
}]]]></db:input-parameters>
		</db:delete>
	</flow>
	<flow name="get:\artists:spotify-config">
		<flow-ref doc:name="get all artists" doc:id="d9aed8d6-6f73-4a71-99f3-78a5dbd63892" name="GetAllArtists"/>
    </flow>
    <flow name="get:\artists\(ID):spotify-config">
		<set-variable value="#[attributes.uriParams.'ID']" doc:name="store ArtistID" doc:id="28116755-484f-4a9f-894c-2a7c811ed51d" variableName="artistID"/>
		<vm:publish-consume doc:name="Get artist info by ID" doc:id="37a50769-c8da-4e57-ad9b-d5920060097c" config-ref="VM_Config" queueName="artistID.toGet">
			<vm:content ><![CDATA[#[vars.artistID]]]></vm:content>
		</vm:publish-consume>
    </flow>
    <flow name="post:\artists:application\json:spotify-config">
        <set-variable value="#[payload]" doc:name="store artist info" doc:id="68830d47-1d50-4da6-b4db-52b89f4c673f" variableName="artistObject"/>
		<vm:publish-consume doc:name="Sync Create Artist" doc:id="7d21089f-f6a6-4375-a65e-945a9eb0ffe8" config-ref="VM_Config" queueName="artistInfo.toPost">
			<vm:content ><![CDATA[#[vars.artistObject]]]></vm:content>
		</vm:publish-consume>
    </flow>
</mule>
